/* =======================
   pages/common
   ======================= */
.main {
	// font-family: "Noto Serif TC", serif;
	@extend %notosanstc;
	font-optical-sizing: auto;
	font-weight: 400;
	font-style: normal;
	font-variation-settings: "wdth" 100;
	color: $color-white;

	overflow: hidden;
	top: 0;
	left: 0;
	width: 100vw;
	background: url(../img/bg.webp) left top no-repeat;
	// background-size: cover;
	background-size: 100% 100%;
	section {
		width: 100%;
		height: 100%;
		min-width: 100vw;
		// min-height: 100vh;
		padding: 50px 0 25px;
		@include mq($max-width: $bp-2s) {
			padding: 25px 0;
		}
		span {
			letter-spacing: 1.8px;
			font-size: inherit;
			&._highlight {
				position: relative;
				display: inline-block;
				font-weight: 500;
				margin: 0 5px;
				padding: 0 3px;
				z-index: 0;
				&._t {
					font-size: $fontsize-1;
					@include mq($max-width: $bp-2s) {
						font-size: $fontsize-3;
						letter-spacing: 3px;
					}
				}
				&:after {
					content: "";
					position: absolute;
					left: -.3em;
					top: .7em;
					background: rgba(120, 61, 212, 1);
					width: 107%;
					height: .87em;
					// margin-left: -5%;
					border-radius: 2px;
					z-index: -1;
				}
			}
			&._bold {
				font-weight: bold;
			}
			&._y {
				color: rgba(255, 226, 128, 1);
			}
			&._small {
				font-size: $fontsize-a;
			}
		}
		.inner {
			max-width: $bp-2;
			margin: 0 auto;
			font-size: $fontsize;
			text-align: center;
			@include mq($max-width: $bp-2) {
				max-width: 90vw;
			}
			> .title {
				display: block;
				margin: 25px auto 40px;
				&:before {
					content: "";
					position: absolute;
					left: 0;
					width: 100%;
					height: 100%;
				}
			}
			.description {
				display: block;;
				margin: 20px auto;
				line-height: 1.8em;
				letter-spacing: 1px;
				@include mq($max-width: $bp-2s) {
					font-size: $fontsize-1;
					line-height: normal;
					max-width: 80vw;
				}
				&._t {
					margin: 20px auto;
					text-align: center !important;
				}
			}
			> .content {
				letter-spacing: 1px;
				.bbox {
					margin: 35px auto;
					padding: 30px 40px;
					display: flex;
					align-items: center;
					justify-content: center;

					line-height: normal;
					border: 0 solid transparent;
					border-radius: 15px;
					backface-visibility: hidden;
					transform: translateZ(0);
					background-image: linear-gradient(to top, rgba(255, 255, 255, .4), rgba(255, 255, 255, 0));
					@include mq($max-width: $bp-2m) {
						padding: 0;
						flex-direction: column;
					}
					&:before {
						content: "";
						display: block;
						position: absolute;
						top: 0;
						left: 0;
						width: 99.9%;
						height: 100%;
						border: 1px solid transparent;
						border-radius: 15px;
						background-image: linear-gradient(to bottom, rgba(255, 255, 255, .7), rgba(255, 255, 255, 0));
						background-origin: border-box;
						mask-image: linear-gradient(white, white), linear-gradient(white, white);
						mask-composite: exclude, add;
						mask-clip: padding-box, border-box;
					}

					&_l,
					&_r {
						width: 100%;
						display: flex;
						align-items: center;
						justify-content: center;
						@include mq($max-width: $bp-2m) {
							padding: 35px
						}
						@include mq($max-width: $bp-m) {
							flex-direction: column;
						}
						@include mq($max-width: $bp-2s) {
							padding: 35px 20px;
						}
					}
					&_r {
						&:before {
							content: "";
							position: absolute;
							top: 0;
							left: 0;
							width: 1px;
							height: 100%;
							background: linear-gradient(to bottom, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1), rgba(255, 255, 255, 0));
							pointer-events: none;
							z-index: 1;
							@include mq($max-width: $bp-2m) {
								width: 50% !important;
								height: 1px !important;
								background: linear-gradient(to right, rgba(255, 255, 255, 0), rgba(255, 255, 255, 1), rgba(255, 255, 255, 0)) !important;
								left: 50% !important;
								margin-left: -25% !important;
							}
						}
					}
					&-n {
						display: flex;
						align-items: center;
						justify-content: center;

						background: rgba(241, 140, 68, 1);
						border-radius: 50%;
						width: 35px;
						height: 35px;
						margin-right: 15px;
						line-height: normal;
						@include mq($max-width: $bp-m) {
							margin-right: 0;
							margin-bottom: 15px;
						}
						@include mq($max-width: $bp-2s) {
							width: 50px;
							height: 50px;
							font-size: $fontsize-3;
						}
					}
					&-p {
						text-align: left;
						line-height: normal;
						letter-spacing: 1px;
						@include mq($max-width: $bp-m) {
							text-align: center;
						}
						@include mq($max-width: $bp-2s) {
							font-size: $fontsize-1;
						}
						span._small {
							@include mq($max-width: $bp-2s) {
								font-size: $fontsize-1;
							}
						}
					}
				}

				.step {
					display: grid;
					grid-template-columns: repeat(4, 1fr);
					grid-column-gap: 18px;
					margin-top: 50px;
					@include mq($max-width: $bp-2) {
						// max-width: 90vw;
						grid-template-columns: repeat(auto-fit, minmax(calc(100%/5), 1fr));
						grid-column-gap: 5px;
					}
					@include mq($max-width: $bp-2m) {
						grid-template-columns: repeat(2, 1fr);
					}
					@include mq($max-width: $bp-2s) {
						grid-template-columns: repeat(1, 1fr);
					}
					&-t {
						width: 100%;
						margin: 0 auto;
						@include mq($max-width: $bp-2s) {
							max-width: 80vw;
							br {
								display: none;
							}
						}
						&-1,
						&-2,
						&-3 {
							line-height: 1.4em;
							font-size: $fontsize_a;
							letter-spacing: 1px;
							@include mq($max-width: $bp-2) {
								font-size: $fontsize_c;
								// letter-spacing: 0;
							}
							@include mq($max-width: $bp-2s) {
								font-size: $fontsize-1;
								margin: 5px 0;
								letter-spacing: 2px;
							}
						}
						&-1 {
							font-size: $fontsize_b;
							color: rgba(161, 138, 200, 1);
							@include mq($max-width: $bp-2s) {
								font-size: $fontsize;
								letter-spacing: 1px;
							}
						}
						&-2 {
							span._y {
								@include mq($max-width: $bp-2s) {
									display: block;
								}
							}
						}
						&-3 {
							color: rgba(255, 226, 128, 1);
						}
					}
					&-b {
						margin: 20px auto 50px;
						&:before {
							content: "";
							display: block;
							position: absolute;
							top: 0;
							left: 0;
							width: 100%;
							height: 100%;
						}
					}
					&_1 {
						.step-t-2 {
							span._y {
								@include mq($max-width: $bp-2s) {
									display: inline;
								}
							}
						}
					}
				}

				.gotobtn {
					border-radius: 35px;
					background: rgba(209, 7, 88, 1);
					color: $color-white;
					display: inline-block;
					padding: 7px 21px;
					box-shadow: 0px 18px 20.2px 0px rgba(0, 0, 0, .25);
					@include mq($max-width: $bp-2s) {
						padding: 15px 50px;
						margin: 10px auto;
					}
					> a {
						color: inherit;
						display: block;
						width: 100%;
						height: 100%;
						letter-spacing: 1px;
						line-height: normal;
						font-weight: bold;
						@include mq($max-width: $bp-2s) {
							font-size: $fontsize-2;
							letter-spacing: 2px;
							// display: flex;
							align-items: center;
							justify-content: center;
							display: inline-grid;
							grid-template-columns: 1fr auto;
						}
						&:after {
							content: "";
							position: relative;
							display: inline-block;
							margin-left: 7px;
							right: 0;
							width: 16px;
							height: 13px;
							background: url(../img/cta_arrow.svg) left center no-repeat;
							background-size: cover;
							@include mq($max-width: $bp-2s) {
								width: calc(16px * 1.7);
								height: calc(13px * 1.7);
								margin-left: 10px;
								margin-bottom: -2px;
							}
						}
					}
				}
			}
		}
		&.fullwidth {
			.inner {
				width: 100% !important;
				max-width: 100% !important;
			}
		}
	}
}
body {
	// background: #000;
	// background: url(../img/bg-block.jpg) center center repeat;
	// background-size: contain;
	// background: url(../img/bg.jpg) center center repeat;

	overflow-x: hidden;
	scroll-behavior: smooth;
	color: $color-white;
	&.disableScroll {
		// position: fixed;
		overflow: hidden;
	}
}